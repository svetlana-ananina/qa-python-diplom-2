{"name": "Проверка получения количества заказов \"total_today\" для авторизованного пользователя - 1 заказ", "status": "failed", "statusDetails": {"message": "AssertionError: Получено неверное значение ключа \"totalToday\": ожидалось \"1\", получено \"143\"", "trace": "self = <test_get_user_orders.TestGetUserOrders object at 0x00000227C0704050>\nsetup_user = ({'email': 'ftzydeetgi@mail.ru', 'name': 'qssfivexbe', 'password': 'cycihdnogc'}, 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6...jhmOWVkMjgwMDAxYjNhNjFiMiIsImlhdCI6MTcwNTA3NjM2NywiZXhwIjoxNzA1MDc3NTY3fQ.vhgO5K6ay0nDLE5wIvTIwKiaB0QRkiUsOx23r4bCDmQ')\n\n    @allure.title('Проверка получения количества заказов \"total_today\" для авторизованного пользователя - 1 заказ')\n    def test_get_user_orders_total_today_authorized_user(self, setup_user):\n        # сохраняем авторизационный токен пользователя, полученный при регистрации\n        user_data, auth_token = setup_user\n        # получаем список ингредиентов и составляем заказ\n        ingredients_list = self.__create_burger()\n        # отправляем запрос на создание заказа для пользователя\n        u.create_order(ingredients_list, auth_token)\n        # отправляем запрос на получение заказов пользователя\n        response = u.try_to_get_user_orders(auth_token)\n    \n        # Проверяем, что получен статус-код 200 OK и в теле ответа \"success\" = True\n        # и получаем тело ответа\n        received_body = c.check_success_ok(response)\n        # проверяем поля \"total\" и \"totalToday\" в теле ответа\n>       c.check_received_orders_total_today(received_body, 1)\n\ntests\\test_get_user_orders.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhelpers\\helpers_on_check_response.py:218: in check_received_orders_total_today\n    HelpersOnCheck.check_key_and_value_in_body(received_body, KEYS.TOTAL_TODAY_KEY, amount)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse_body = {'orders': [{'_id': '65a166919ed280001b3a61b4', 'createdAt': '2024-01-12T16:19:29.027Z', 'ingredients': ['61c0c5a71d1f...daaa72'], 'name': 'Spicy бессмертный флюоресцентный бургер', ...}], 'success': True, 'total': 36368, 'totalToday': 143}\nkey = 'totalToday', value = 1\n\n    @staticmethod\n    @allure.step('Проверяем значение ключа в ответе')\n    def check_key_and_value_in_body(response_body, key, value):\n        # проверяем наличие ключа в ответе\n        assert key in response_body, f'В ответе отсутствует ключ \"{key}\", получен ответ: \"{response_body}\"'\n        # проверяем значение ключа в ответе\n        received_value = response_body[key]\n>       assert received_value == value, f'Получено неверное значение ключа \"{key}\": ожидалось \"{value}\", получено \"{received_value}\"'\nE       AssertionError: Получено неверное значение ключа \"totalToday\": ожидалось \"1\", получено \"143\"\n\nhelpers\\helpers_on_check_response.py:25: AssertionError"}, "steps": [{"name": "Собираем бургер для заказа", "status": "passed", "start": 1705076365660, "stop": 1705076365660}, {"name": "Создаем заказ и проверяем полученные в ответе данные", "status": "passed", "steps": [{"name": "Отправляем запрос на создание заказа", "status": "passed", "steps": [{"name": "Отправляем API-запрос на создание заказа", "status": "passed", "parameters": [{"name": "payload", "value": "{'ingredients': ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72']}"}, {"name": "headers", "value": "{'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTE2NjhmOWVkMjgwMDAxYjNhNjFiMiIsImlhdCI6MTcwNTA3NjM2NywiZXhwIjoxNzA1MDc3NTY3fQ.vhgO5K6ay0nDLE5wIvTIwKiaB0QRkiUsOx23r4bCDmQ'}"}], "start": 1705076365660, "stop": 1705076367125}], "parameters": [{"name": "ingredient_list", "value": "['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72']"}, {"name": "auth_token", "value": "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTE2NjhmOWVkMjgwMDAxYjNhNjFiMiIsImlhdCI6MTcwNTA3NjM2NywiZXhwIjoxNzA1MDc3NTY3fQ.vhgO5K6ay0nDLE5wIvTIwKiaB0QRkiUsOx23r4bCDmQ'"}], "start": 1705076365660, "stop": 1705076367125}, {"name": "Проверяем код ответа", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}], "start": 1705076367125, "stop": 1705076367125}, {"name": "Проверяем значение поля \"success\" в ответе", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_value", "value": "True"}], "start": 1705076367126, "stop": 1705076367126}, {"name": "Проверяем наличие ключа в ответе", "status": "passed", "parameters": [{"name": "response_body", "value": "{'success': True, 'name': 'Spicy бессмертный флюоресцентный бургер', 'order': {'ingredients': [{'_id': '61c0c5a71d1f82001bdaaa6d', 'name': 'Флюоресцентная булка R2-D3', 'type': 'bun', 'proteins': 44, 'fat': 26, 'carbohydrates': 85, 'calories': 643, 'price': 988, 'image': 'https://code.s3.yandex.net/react/code/bun-01.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/bun-01-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/bun-01-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa6f', 'name': 'Мясо бессмертных моллюсков Protostomia', 'type': 'main', 'proteins': 433, 'fat': 244, 'carbohydrates': 33, 'calories': 420, 'price': 1337, 'image': 'https://code.s3.yandex.net/react/code/meat-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/meat-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/meat-02-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa72', 'name': 'Соус Spicy-X', 'type': 'sauce', 'proteins': 30, 'fat': 20, 'carbohydrates': 40, 'calories': 30, 'price': 90, 'image': 'https://code.s3.yandex.net/react/code/sauce-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/sauce-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/sauce-02-large.png', '__v': 0}], '_id': '65a166919ed280001b3a61b4', 'owner': {'name': 'qssfivexbe', 'email': 'ftzydeetgi@mail.ru', 'createdAt': '2024-01-12T16:19:27.995Z', 'updatedAt': '2024-01-12T16:19:27.995Z'}, 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-01-12T16:19:29.027Z', 'updatedAt': '2024-01-12T16:19:29.294Z', 'number': 36368, 'price': 2415}}"}, {"name": "key", "value": "'name'"}], "start": 1705076367126, "stop": 1705076367126}, {"name": "Проверяем наличие ключа в ответе", "status": "passed", "parameters": [{"name": "response_body", "value": "{'success': True, 'name': 'Spicy бессмертный флюоресцентный бургер', 'order': {'ingredients': [{'_id': '61c0c5a71d1f82001bdaaa6d', 'name': 'Флюоресцентная булка R2-D3', 'type': 'bun', 'proteins': 44, 'fat': 26, 'carbohydrates': 85, 'calories': 643, 'price': 988, 'image': 'https://code.s3.yandex.net/react/code/bun-01.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/bun-01-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/bun-01-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa6f', 'name': 'Мясо бессмертных моллюсков Protostomia', 'type': 'main', 'proteins': 433, 'fat': 244, 'carbohydrates': 33, 'calories': 420, 'price': 1337, 'image': 'https://code.s3.yandex.net/react/code/meat-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/meat-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/meat-02-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa72', 'name': 'Соус Spicy-X', 'type': 'sauce', 'proteins': 30, 'fat': 20, 'carbohydrates': 40, 'calories': 30, 'price': 90, 'image': 'https://code.s3.yandex.net/react/code/sauce-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/sauce-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/sauce-02-large.png', '__v': 0}], '_id': '65a166919ed280001b3a61b4', 'owner': {'name': 'qssfivexbe', 'email': 'ftzydeetgi@mail.ru', 'createdAt': '2024-01-12T16:19:27.995Z', 'updatedAt': '2024-01-12T16:19:27.995Z'}, 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-01-12T16:19:29.027Z', 'updatedAt': '2024-01-12T16:19:29.294Z', 'number': 36368, 'price': 2415}}"}, {"name": "key", "value": "'order'"}], "start": 1705076367127, "stop": 1705076367127}, {"name": "Проверяем наличие ключа в ответе", "status": "passed", "parameters": [{"name": "response_body", "value": "{'ingredients': [{'_id': '61c0c5a71d1f82001bdaaa6d', 'name': 'Флюоресцентная булка R2-D3', 'type': 'bun', 'proteins': 44, 'fat': 26, 'carbohydrates': 85, 'calories': 643, 'price': 988, 'image': 'https://code.s3.yandex.net/react/code/bun-01.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/bun-01-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/bun-01-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa6f', 'name': 'Мясо бессмертных моллюсков Protostomia', 'type': 'main', 'proteins': 433, 'fat': 244, 'carbohydrates': 33, 'calories': 420, 'price': 1337, 'image': 'https://code.s3.yandex.net/react/code/meat-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/meat-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/meat-02-large.png', '__v': 0}, {'_id': '61c0c5a71d1f82001bdaaa72', 'name': 'Соус Spicy-X', 'type': 'sauce', 'proteins': 30, 'fat': 20, 'carbohydrates': 40, 'calories': 30, 'price': 90, 'image': 'https://code.s3.yandex.net/react/code/sauce-02.png', 'image_mobile': 'https://code.s3.yandex.net/react/code/sauce-02-mobile.png', 'image_large': 'https://code.s3.yandex.net/react/code/sauce-02-large.png', '__v': 0}], '_id': '65a166919ed280001b3a61b4', 'owner': {'name': 'qssfivexbe', 'email': 'ftzydeetgi@mail.ru', 'createdAt': '2024-01-12T16:19:27.995Z', 'updatedAt': '2024-01-12T16:19:27.995Z'}, 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-01-12T16:19:29.027Z', 'updatedAt': '2024-01-12T16:19:29.294Z', 'number': 36368, 'price': 2415}"}, {"name": "key", "value": "'number'"}], "start": 1705076367127, "stop": 1705076367127}], "parameters": [{"name": "ingredient_list", "value": "['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72']"}, {"name": "auth_token", "value": "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTE2NjhmOWVkMjgwMDAxYjNhNjFiMiIsImlhdCI6MTcwNTA3NjM2NywiZXhwIjoxNzA1MDc3NTY3fQ.vhgO5K6ay0nDLE5wIvTIwKiaB0QRkiUsOx23r4bCDmQ'"}], "start": 1705076365660, "stop": 1705076367128}, {"name": "Отправляем запрос на получение заказов пользователя", "status": "passed", "steps": [{"name": "Отправляем API-запрос на получение заказов пользователя", "status": "passed", "parameters": [{"name": "headers", "value": "{'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTE2NjhmOWVkMjgwMDAxYjNhNjFiMiIsImlhdCI6MTcwNTA3NjM2NywiZXhwIjoxNzA1MDc3NTY3fQ.vhgO5K6ay0nDLE5wIvTIwKiaB0QRkiUsOx23r4bCDmQ'}"}], "start": 1705076367129, "stop": 1705076368206}], "parameters": [{"name": "auth_token", "value": "'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YTE2NjhmOWVkMjgwMDAxYjNhNjFiMiIsImlhdCI6MTcwNTA3NjM2NywiZXhwIjoxNzA1MDc3NTY3fQ.vhgO5K6ay0nDLE5wIvTIwKiaB0QRkiUsOx23r4bCDmQ'"}], "start": 1705076367129, "stop": 1705076368206}, {"name": "Проверяем, что запрос выполнен успешно", "status": "passed", "steps": [{"name": "Проверяем код ответа", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}], "start": 1705076368206, "stop": 1705076368206}, {"name": "Проверяем значение поля \"success\" в ответе", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_value", "value": "True"}], "start": 1705076368206, "stop": 1705076368207}], "parameters": [{"name": "response", "value": "<Response [200]>"}], "start": 1705076368206, "stop": 1705076368207}, {"name": "Проверяем в полученном ответе поле \"totalToday\"", "status": "failed", "statusDetails": {"message": "AssertionError: Получено неверное значение ключа \"totalToday\": ожидалось \"1\", получено \"143\"\n", "trace": "  File \"C:\\Users\\Иван\\PycharmProjects\\qa-python-diplom-2\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Иван\\PycharmProjects\\qa-python-diplom-2\\helpers\\helpers_on_check_response.py\", line 218, in check_received_orders_total_today\n    HelpersOnCheck.check_key_and_value_in_body(received_body, KEYS.TOTAL_TODAY_KEY, amount)\n  File \"C:\\Users\\Иван\\PycharmProjects\\qa-python-diplom-2\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Иван\\PycharmProjects\\qa-python-diplom-2\\helpers\\helpers_on_check_response.py\", line 25, in check_key_and_value_in_body\n    assert received_value == value, f'Получено неверное значение ключа \"{key}\": ожидалось \"{value}\", получено \"{received_value}\"'\n"}, "steps": [{"name": "Проверяем значение ключа в ответе", "status": "failed", "statusDetails": {"message": "AssertionError: Получено неверное значение ключа \"totalToday\": ожидалось \"1\", получено \"143\"\n", "trace": "  File \"C:\\Users\\Иван\\PycharmProjects\\qa-python-diplom-2\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Иван\\PycharmProjects\\qa-python-diplom-2\\helpers\\helpers_on_check_response.py\", line 25, in check_key_and_value_in_body\n    assert received_value == value, f'Получено неверное значение ключа \"{key}\": ожидалось \"{value}\", получено \"{received_value}\"'\n"}, "parameters": [{"name": "response_body", "value": "{'success': True, 'orders': [{'_id': '65a166919ed280001b3a61b4', 'ingredients': ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72'], 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-01-12T16:19:29.027Z', 'updatedAt': '2024-01-12T16:19:29.294Z', 'number': 36368}], 'total': 36368, 'totalToday': 143}"}, {"name": "key", "value": "'totalToday'"}, {"name": "value", "value": "1"}], "start": 1705076368207, "stop": 1705076368207}], "parameters": [{"name": "received_body", "value": "{'success': True, 'orders': [{'_id': '65a166919ed280001b3a61b4', 'ingredients': ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa72'], 'status': 'done', 'name': 'Spicy бессмертный флюоресцентный бургер', 'createdAt': '2024-01-12T16:19:29.027Z', 'updatedAt': '2024-01-12T16:19:29.294Z', 'number': 36368}], 'total': 36368, 'totalToday': 143}"}, {"name": "amount", "value": "1"}], "start": 1705076368207, "stop": 1705076368207}], "start": 1705076365660, "stop": 1705076368208, "uuid": "34c0deeb-0973-48ef-9138-1559a83858b5", "historyId": "5f662d0c9596a63a0eed98e2dae44fbd", "testCaseId": "5f662d0c9596a63a0eed98e2dae44fbd", "fullName": "tests.test_get_user_orders.TestGetUserOrders#test_get_user_orders_total_today_authorized_user", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_ingredients', scope='class')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_user_orders"}, {"name": "subSuite", "value": "TestGetUserOrders"}, {"name": "host", "value": "DESKTOP-0A7KFK3"}, {"name": "thread", "value": "5180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_user_orders"}]}